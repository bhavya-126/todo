{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpService } from 'src/app/services/http.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LoginComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \" Password is a required field \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    this.formBuilder = inject(FormBuilder);\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required, Validators.email],\n      password: ['', Validators.required, Validators.minLength(8)]\n    });\n    this.httpService = inject(HttpService);\n  }\n  onLogIn() {\n    this.httpService.login(this.loginForm.value).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 5,\n    consts: [[1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-input\"], [\"class\", \"err\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-input\"], [1, \"submit-button\", 3, \"disabled\"], [1, \"err\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onLogIn();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Email ! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, LoginComponent_p_5_Template, 2, 0, \"p\", 4);\n        i0.ɵɵtemplate(6, LoginComponent_p_6_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, LoginComponent_p_11_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].hasError(\"required\") && ctx.loginForm.controls[\"email\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].hasError(\"email\") && ctx.loginForm.controls[\"email\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].hasError(\"required\") && ctx.loginForm.controls[\"password\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".login-form[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    background-color: #f9f9f9;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n  }\\n  \\n  .form-label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n    font-weight: bold;\\n  }\\n  \\n  .form-input[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    box-sizing: border-box;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n  }\\n  \\n  .err[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 0.875em;\\n    margin-top: 5px;\\n  }\\n  \\n  .submit-button[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    padding: 10px 20px;\\n    font-size: 1em;\\n    color: #fff;\\n    background-color: #007bff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    transition: background-color 0.3s;\\n  }\\n  \\n  .submit-button[_ngcontent-%COMP%]:disabled {\\n    background-color: #ccc;\\n    cursor: not-allowed;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGlDQUFpQztFQUNuQzs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixtQkFBbUI7RUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5lcnIge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMC44NzVlbTtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLnN1Ym1pdC1idXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdWJtaXQtYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["inject","Validators","FormBuilder","HttpService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","formBuilder","loginForm","group","email","required","password","minLength","httpService","onLogIn","login","value","subscribe","next","res","console","log","error","err","_","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","LoginComponent_p_5_Template","LoginComponent_p_6_Template","LoginComponent_p_11_Template","ɵɵproperty","ɵɵadvance","controls","hasError","dirty","valid"],"sources":["/mnt/d/JavaScript/nodejs/todoApp/Frontend/todo/src/app/components/login/login.component.ts","/mnt/d/JavaScript/nodejs/todoApp/Frontend/todo/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  formBuilder: FormBuilder = inject(FormBuilder);\n  loginForm: FormGroup = this.formBuilder.group({\n    email: ['', Validators.required, Validators.email],\n    password: ['', Validators.required, Validators.minLength(8)],\n  });\n  httpService: HttpService = inject(HttpService);\n\n  onLogIn() {\n    this.httpService.login(this.loginForm.value).subscribe({\n      next: (res) => {\n        console.log(res);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogIn()\" class=\"login-form\">\n  <div class=\"form-group\">\n    <label for=\"email\" class=\"form-label\">Email ! </label>\n    <input\n      type=\"text\"\n      name=\"email\"\n      id=\"email\"\n      formControlName=\"email\"\n      class=\"form-input\"\n    />\n    <p\n      class=\"err\"\n      *ngIf=\"\n        loginForm.controls['email'].hasError('required') &&\n        loginForm.controls['email'].dirty\n      \"\n    >\n      Email is required\n    </p>\n    <p\n      class=\"err\"\n      *ngIf=\"\n        loginForm.controls['email'].hasError('email') &&\n        loginForm.controls['email'].dirty\n      \"\n    >\n      Please enter a valid email\n    </p>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\" class=\"form-label\">Password</label>\n    <input\n      type=\"password\"\n      name=\"password\"\n      id=\"password\"\n      formControlName=\"password\"\n      class=\"form-input\"\n    />\n    <p\n      class=\"err\"\n      *ngIf=\"\n        loginForm.controls['password'].hasError('required') &&\n        loginForm.controls['password'].dirty\n      \"\n    >\n      Password is a required field\n    </p>\n  </div>\n\n  <button [disabled]=\"!loginForm.valid\" class=\"submit-button\">Submit</button>\n</form>\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,+BAA+B;;;;;;ICMvDC,EAAA,CAAAC,cAAA,WAMC;IACCD,EAAA,CAAAE,MAAA,0BACF;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IACJH,EAAA,CAAAC,cAAA,WAMC;IACCD,EAAA,CAAAE,MAAA,mCACF;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAWJH,EAAA,CAAAC,cAAA,WAMC;IACCD,EAAA,CAAAE,MAAA,qCACF;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADnCR,OAAM,MAAOC,cAAc;EAL3BC,YAAA;IAME,KAAAC,WAAW,GAAgBV,MAAM,CAACE,WAAW,CAAC;IAC9C,KAAAS,SAAS,GAAc,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC5CC,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC;MAClDE,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC;KAC5D,CAAC;IACF,KAAAC,WAAW,GAAgBjB,MAAM,CAACG,WAAW,CAAC;;EAE9Ce,OAAOA,CAAA;IACL,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC,CAACC,SAAS,CAAC;MACrDC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC;MACDG,KAAK,EAAGC,GAAG,IAAI;QACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAjBUpB,cAAc;EAAA;EAAA,QAAAqB,EAAA,G;UAAdrB,cAAc;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX3BhC,EAAA,CAAAC,cAAA,cAAwE;QAA1CD,EAAA,CAAAkC,UAAA,sBAAAC,iDAAA;UAAA,OAAYF,GAAA,CAAAnB,OAAA,EAAS;QAAA,EAAC;QAClDd,EAAA,CAAAC,cAAA,aAAwB;QACgBD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtDH,EAAA,CAAAoC,SAAA,eAME;QACFpC,EAAA,CAAAqC,UAAA,IAAAC,2BAAA,eAQI;QACJtC,EAAA,CAAAqC,UAAA,IAAAE,2BAAA,eAQI;QACNvC,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACmBD,EAAA,CAAAE,MAAA,eAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzDH,EAAA,CAAAoC,SAAA,gBAME;QACFpC,EAAA,CAAAqC,UAAA,KAAAG,4BAAA,eAQI;QACNxC,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,iBAA4D;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAjDvEH,EAAA,CAAAyC,UAAA,cAAAR,GAAA,CAAA1B,SAAA,CAAuB;QAYtBP,EAAA,CAAA0C,SAAA,GAIP;QAJO1C,EAAA,CAAAyC,UAAA,SAAAR,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,UAAAC,QAAA,gBAAAX,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,UAAAE,KAAA,CAIP;QAKO7C,EAAA,CAAA0C,SAAA,GAIP;QAJO1C,EAAA,CAAAyC,UAAA,SAAAR,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,UAAAC,QAAA,aAAAX,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,UAAAE,KAAA,CAIP;QAeO7C,EAAA,CAAA0C,SAAA,GAIP;QAJO1C,EAAA,CAAAyC,UAAA,SAAAR,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,aAAAC,QAAA,gBAAAX,GAAA,CAAA1B,SAAA,CAAAoC,QAAA,aAAAE,KAAA,CAIP;QAKU7C,EAAA,CAAA0C,SAAA,GAA6B;QAA7B1C,EAAA,CAAAyC,UAAA,cAAAR,GAAA,CAAA1B,SAAA,CAAAuC,KAAA,CAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}